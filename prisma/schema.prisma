generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["fullTextSearch"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id        String    @id @default(cuid())
    firstName String?
    lastName  String?
    email     String    @unique
    role      Role      @default(USER)
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    notes     Note[]
    password  Password?
    vendor    Vendor?   @relation(fields: [vendorId], references: [id])
    vendorId  String?
    comments  Comment[]
}

model Password {
    hash   String
    userId String @unique
    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Note {
    id        String   @id @default(cuid())
    title     String
    body      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    userId    String
    orderId   String?
    order     Order?   @relation(fields: [orderId], references: [id])
    user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Address {
    id          String  @id @default(cuid())
    line1       String?
    line2       String?
    line3       String?
    line4       String?
    city        String?
    state       String?
    postalCode  String?
    phoneNumber String?
    orders      Order[]
}

model Comment {
    id            Int          @id @default(autoincrement())
    content       String
    createdAt     DateTime     @default(now())
    updatedAt     DateTime     @updatedAt
    fulfillment   Fulfillment? @relation(fields: [fulfillmentId], references: [id], onDelete: Cascade)
    fulfillmentId String?
    user          User         @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId        String
}

model Fulfillment {
    id           String                @id @default(cuid())
    name         String                @unique
    comments     Comment[]
    lineItems    FulfillmentLineItem[]
    order        Order                 @relation(fields: [orderId], references: [id])
    orderId      String
    status       FulfillmentStatus     @default(NEW)
    trackingInfo TrackingInfo?
    vendor       Vendor?               @relation(fields: [vendorId], references: [id])
    vendorId     String?
    isArchived   Boolean?              @default(false)
}

model FulfillmentLineItem {
    id              String        @id @default(cuid())
    fulfillment     Fulfillment   @relation(fields: [fulfillmentId], references: [id])
    fulfillmentId   String
    orderLineItem   OrderLineItem @relation(fields: [orderLineItemId], references: [id])
    orderLineItemId String        @unique
}

model TrackingInfo {
    number        String      @id @unique
    company       String
    fulfillment   Fulfillment @relation(fields: [fulfillmentId], references: [id], onDelete: Cascade)
    fulfillmentId String      @unique
}

model Order {
    id           String          @id @default(uuid())
    name         String?         @unique
    createdAt    DateTime        @default(now())
    address      Address         @relation(fields: [addressId], references: [id])
    addressId    String
    status       OrderStatus     @default(DRAFT)
    notes        Note[]
    items        OrderItem[]
    lineItems    OrderLineItem[]
    fulfillments Fulfillment[]
}

model OrderItem {
    id        String          @id @default(uuid())
    order     Order           @relation(fields: [orderId], references: [id])
    orderId   String
    product   RetailerProduct @relation(fields: [productId], references: [id])
    productId String
    quantity  Int             @default(1)
}

model OrderLineItem {
    id                  String               @id @default(uuid())
    order               Order                @relation(fields: [orderId], references: [id])
    orderId             String
    sample              Sample               @relation(fields: [sampleId], references: [id])
    sampleId            String
    quantity            Int                  @default(1)
    fulfillmentLineItem FulfillmentLineItem?
}

model RetailerProduct {
    id              String         @id @default(cuid())
    sku             String         @unique
    title           String
    orderItems      OrderItem[]
    tile            Tile?
    vendorProduct   VendorProduct? @relation(fields: [vendorProductId], references: [id])
    vendorProductId String?        @unique
}

model Sample {
    id             String          @id @default(cuid())
    gid            String?         @unique
    materialNo     String          @unique
    title          String?
    vendorTitle    String?
    seriesName     String
    seriesAlias    String?
    color          String
    colorAlias     String?
    finish         String?
    orderLineItems OrderLineItem[]
    vendor         Vendor?         @relation(fields: [vendorId], references: [id])
    vendorId       String?
    vendorProducts VendorProduct[]
}

model Tile {
    id            Int             @id @default(autoincrement())
    color         String
    finish        String
    material      Material
    width         Float
    widthUnit     UnitOfMeasure
    length        Float
    lengthUnit    UnitOfMeasure
    thickness     Float
    thicknessUnit UnitOfMeasure
    product       RetailerProduct @relation(fields: [productId], references: [id])
    productId     String          @unique
}

model Vendor {
    id           String          @id @default(cuid())
    name         String          @unique
    fulfillments Fulfillment[]
    products     VendorProduct[]
    sample       Sample[]
    users        User[]
}

model VendorProduct {
    id               String           @id @default(cuid())
    itemNo           String           @unique
    listPrice        Decimal?
    vendorId         String
    retailerProduct  RetailerProduct?
    vendor           Vendor           @relation(fields: [vendorId], references: [id])
    color            String?
    description      String?
    finish           String?
    seriesName       String?
    sample           Sample?          @relation(fields: [sampleMaterialNo], references: [materialNo])
    sampleMaterialNo String?
}

enum FulfillmentStatus {
    NEW
    PROCESSING
    COMPLETE
    CANCELLED
    ERROR
}

enum Material {
    CERAMIC
    PORCELAIN
}

enum OrderStatus {
    DRAFT
    NEW
    PROCESSING
    COMPLETE
    CANCELLED
    ERROR
}

enum Role {
    ADMIN
    SUPERADMIN
    USER
}

enum UnitOfMeasure {
    INCHES
    MILLIMETERS
    CENTIMETERS
}
